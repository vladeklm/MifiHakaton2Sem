version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: fin_audit_db
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: fin_audit
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d fin_audit"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend/finaudit
      dockerfile: Dockerfile
    container_name: spring_backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fin_audit
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: secretpassword
      SPRING_JPA_HIBERNATE_DDL-AUTO: create
      SPRING_MVC_CORS_ALLOWED_ORIGINS: "http://frontend:3000,http://localhost:3000"
      SPRING_JWT_SECRET: "SuperSecretKeyWithAtLeast512BitsLength"
      SPRING_JWT_EXPIRATION_MS: 86400000
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    environment:
      - NODE_ENV=production
      - REACT_APP_API_BASE_URL=/api/v1/transactions
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge